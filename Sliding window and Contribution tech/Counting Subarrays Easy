Given an array A of N non-negative numbers and a non-negative number B,
you need to find the number of subarrays in A with a sum less than B.
We may assume that there is no overflow.

Code:
class Solution:
    # @param A : list of integers
    # @param B : integer
    # @return an integer
    def solve(self, A, B):
        psum = [0]*len(A)
        psum[0] = A[0]
        for i in range(1,len(A)):
           psum[i] = psum[i-1]+A[i]


        count = 0
        for l in range(len(A)):
            for r in range(l,len(A)):
                sub_sum = 0
                if l==0:
                    sub_sum = psum[r]
                else:
                    sub_sum = psum[r] -psum[l-1]
                
                if sub_sum<B:
                    count+=1
        return count
